# Fulcrum Sample Config File
#
# Feel free to edit this file (or a copy of it) and then pass it as a bare
# argument when starting Fulcrum, e.g.:
#
#     $  ./Fulcrum myconfig.conf
#
# The configuration file format for Fulcrum resembles that of bitcoind.conf in
# that it is a simple name = value style file format, with comments denoted by
# `#` characters.  Configuration variables are case insensitive and
# Fulcrum completely ignores variable names that it does not understand.
# Unlike the bitcoin.conf format, if you specify the same name = value option
# multiple times, only the last one in the file takes effect.
#
# Boolean variables (such as 'debug' or 'syslog' below) may be specified
# as name = 1, name = true, name = false, name = off, etc, or without any
# '=' sign in which case they are interpreted as "true".
#
# Some (but not all) configuration variables below have corresponding command-
# line equivalents  (such as -D/--datadir, for example).  If a configuration
# parameter is specified both in the conf file as well as the CLI, the CLI arg
# takes precedence and overrides the corresponding conf file parameter.  In
# this way, it's possible to override the conf file for a particular run of
# Fulcrum while still "inheriting" the rest of the config file.  Say you wanted
# to test Fulcrum against a different daemon, you would then do:
#
#     $  ./Fulcrum myconfig.conf -b 192.168.1.23:45678
#
#
# What follows below are commented-out versions (in many cases set to their
# defaults) of all of the variables you can use to customize the operation of
# Fulcrum.  Required parameters have been left uncommented and must be
# specified for Fulcrum to operate correctly.
#
#
# ----------------------------------------------------------------------------
# BASIC OPTIONS
#-----------------------------------------------------------------------------
#
# Database directory - 'datadir' - REQUIRED
#
# Specifies the directory where to store the database.  Be sure the directory
# is on a drive that has 35+ GB of space for mainnet or ~8GB of space for
# testnet.  If the directory does not exist, it will be created.  It is
# recommended you use an SSD, but an HDD will work as well once synched,
# however synching will take much longer on an HDD.
#
# NOTE: Use native path separators: '/' on Unix, '\' on Windows.
#
datadir = /path/to/a/dir  # Windows: datadir = D:\FulcrumData\mainnet


# Bitcoin daemon RPC host:port - 'bitcoind' - REQUIRED
#
# Specifies a hostname:port for connecting to the bitcoind rpc service. This
# is a required option (along with rpcuser and rpcpassword below).  This
# hostname:port would  be the same as you specified in your bitcoin.conf file
# under `rpcbind=` and `rpcport=`.
#
bitcoind = 127.0.0.1:8332


# Bitcoin daemon RPC username - 'rpcuser' - REQUIRED
#
# Specifies the username to use for authenticating to bitcoind.  This is a
# required option, along with 'bitcoind' and 'rpcpassword'.  This option should
# be the same username you specified in your bitcoind.conf file under
# `rpcuser=`.  For security, you may want to omit this option from the config
# file and use the RPCUSER environment variable instead (however, the config
# file or any -u/--rpcuser CLI args will take precedence, so if you do want to
# use the environment variable scheme, then be sure to comment-out the below
# line).
#
rpcuser = Bob_The_Banker


# Bitcoin daemon RPC password - 'rpcpassword' - REQUIRED
#
# Specifies the password to use for authenticating to bitcoind.  This is a
# required option, along with 'bitcoind' and 'rpcuser'.  This option should
# be the same password you specified in your bitcoind.conf file under
# `rpcpassword=`.  For security, you may want to omit this option from the
# config file and use the RPCPASSWORD environment variable instead (however,
# the config file or any -p/--rpcpassword CLI args will take precedence, so if
# you do want to use the environment variable scheme, then be sure to
# comment-out the below line).
#
rpcpassword = hunter1


# Bitcoin daemon poll interval - 'polltime' - Default: 2.0 seconds
#
# The number of seconds for the bitcoind poll interval.  Bitcoind is polled
# once every `polltime` seconds to detect mempool and blockchain changes.
# This value must be at least 0.5 and cannot exceed 30. If not specified,
# the default is 2.0 seconds.
#
#polltime = 2.0


# TCP bind - 'tcp' - DEFAULT: 0.0.0.0:50001
#
# Specifies the TCP hostname:port to bind to for Electron Cash clients to
# connect to.  Default is 0.0.0.0:50001.  Typically on the Electron Cash
# network 50001 & 50002 are for mainnet TCP & SSL and 60001 & 60002 are for
# testnet TCP & SSL, respectively.  If you wish to bind to multiple ports, the
# only way to do that is via the command-line by specifying the '-t' argument
# multiple times (in which case any tcp= values appearing in the conf file are
# ignored completely).
#
# Note: At the present time, outside of Tor proxying, Electron Cash clients
# typically do not like to connect to non-SSL servers -- so using just TCP
# will lead to not very many clients using your server.  SSL is highly
# recommended.
#
#tcp = 0.0.0.0:50001


# SSL bind - 'ssl' - DEFAULT: disabled (no SSL bind port)
#
# Specifies the SSL hostname:port to bind to for Electron Cash clients to
# connect to.  Default is to not use SSL.  Typically on the Electron Cash
# network 50001 & 50002 are for mainnet TCP & SSL and 60001 & 60002 are for
# testnet TCP & SSL, respectively.  If you wish to bind to multiple ports, the
# only way to do that is via the command-line by specifying the '-s' argument
# multiple times (in which case any ssl= values appearing in the conf file are
# ignored completely).
#
# If you enable SSL you must also specify the 'cert' and 'key' configuration
# parameters (see below).
#
#ssl = 0.0.0.0:50002


# SSL certificate - 'cert' - DEFAULT: None (required for SSL)
#
# Specifes the SSL certificate to use for all SSL ports.  The certificate
# must be in PEM format.  (Self-signed certs are ok).
#
#cert = /path/to/server.crt


# SSL private key - 'key' - DEFAULT: None (required for SSL)
#
# Specifies the SSL private key to use for encryption.  At the present time
# only RSA keys are supported, and the file must be in PEM format.
#
#key = /path/to/server.key


# HTTP stats bind - 'stats' - DEFAULT: None
#
# Specifies the listen address and port for the "stats" HTTP server.  You may
# hit this endpoint with /stats in your browser, and it will serve you some
# JSON-encoded statistics.  The /stats endpoint is intended as a convenient
# way to keep track of what your server is up to, how many clients are
# connected, what the load it is, etc.  Do *NOT* expose this port to the
# public!  It is for your admin use only!  The default is to not start any
# "stats" HTTP servers unless you specify this option.  This option may be
# specified more than once (from the CLI only) to bind to multiple interfaces
# and/or ports.
#
#stats = 127.0.0.1:8080


# Syslog mode - 'syslog' - DEFAULT: off (false)
#
# Syslog mode. If on Unix, use the syslog() facility to produce log messages
# (rather than writing to stdout).  This option currently has no effect on
# Windows.
#
#syslog = false


# Debug mode - 'debug' - DEFAULT: off for Release builds, on for Debug builds
#
# Specifies that logging should produce extra verbose output, which may be
# useful for diagnostics.  This option is the inverse of the 'quiet' option
# (see below).  You may specify either 'debug' or 'quiet', but not both.
#
#debug = false


# Quiet mode - 'quiet' - DEFAULT: on for Release builds, off for Debug builds
#
# Limits logging to the normal messages, without any extra verbose debug info.
# This option is the inverse of the 'debug' option and is the default on
# release builds.  You may specify either 'debug' or 'quiet', but not both.
#
#quiet = true


# CheckDB at startup - 'checkdb' - DEFAULT: off (false)
#
# If enabled, database consistency will be checked thoroughly for sanity &
# integrity each time Fulcrum is (re)started.  This may take anywhere from 30
# seconds up to a few minutes depending on your system.  Under normal
# operation these checks are not necessary but are provided as a debugging
# tool in case you suspect your database files may be corrupt.  This also may
# be specified on the CLI via the --checkdb or -C option for a one-time check.
#
#checkdb = false

